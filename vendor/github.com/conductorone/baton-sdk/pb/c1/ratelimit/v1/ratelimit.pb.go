// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: c1/ratelimit/v1/ratelimit.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RateLimitDescription_Status int32

const (
	RateLimitDescription_STATUS_UNSPECIFIED RateLimitDescription_Status = 0
	RateLimitDescription_STATUS_OK          RateLimitDescription_Status = 1
	RateLimitDescription_STATUS_OVERLIMIT   RateLimitDescription_Status = 2
	RateLimitDescription_STATUS_ERROR       RateLimitDescription_Status = 3
	RateLimitDescription_STATUS_EMPTY       RateLimitDescription_Status = 4
)

// Enum value maps for RateLimitDescription_Status.
var (
	RateLimitDescription_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_OK",
		2: "STATUS_OVERLIMIT",
		3: "STATUS_ERROR",
		4: "STATUS_EMPTY",
	}
	RateLimitDescription_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_OK":          1,
		"STATUS_OVERLIMIT":   2,
		"STATUS_ERROR":       3,
		"STATUS_EMPTY":       4,
	}
)

func (x RateLimitDescription_Status) Enum() *RateLimitDescription_Status {
	p := new(RateLimitDescription_Status)
	*p = x
	return p
}

func (x RateLimitDescription_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateLimitDescription_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_c1_ratelimit_v1_ratelimit_proto_enumTypes[0].Descriptor()
}

func (RateLimitDescription_Status) Type() protoreflect.EnumType {
	return &file_c1_ratelimit_v1_ratelimit_proto_enumTypes[0]
}

func (x RateLimitDescription_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateLimitDescription_Status.Descriptor instead.
func (RateLimitDescription_Status) EnumDescriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{0, 0}
}

// https://tools.ietf.org/html/draft-ietf-httpapi-ratelimit-headers-00#section-1.1
// RateLimitDescription is a minimal representation of a rate limit.
type RateLimitDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    RateLimitDescription_Status `protobuf:"varint,1,opt,name=status,proto3,enum=c1.ratelimit.v1.RateLimitDescription_Status" json:"status,omitempty"`
	Limit     int64                       `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Remaining int64                       `protobuf:"varint,3,opt,name=remaining,proto3" json:"remaining,omitempty"`
	Count     int64                       `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	ResetAt   *timestamppb.Timestamp      `protobuf:"bytes,4,opt,name=reset_at,json=resetAt,proto3" json:"reset_at,omitempty"`
}

func (x *RateLimitDescription) Reset() {
	*x = RateLimitDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimitDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitDescription) ProtoMessage() {}

func (x *RateLimitDescription) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitDescription.ProtoReflect.Descriptor instead.
func (*RateLimitDescription) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{0}
}

func (x *RateLimitDescription) GetStatus() RateLimitDescription_Status {
	if x != nil {
		return x.Status
	}
	return RateLimitDescription_STATUS_UNSPECIFIED
}

func (x *RateLimitDescription) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RateLimitDescription) GetRemaining() int64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *RateLimitDescription) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RateLimitDescription) GetResetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ResetAt
	}
	return nil
}

type ReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestToken string                `protobuf:"bytes,1,opt,name=request_token,json=requestToken,proto3" json:"request_token,omitempty"`
	Description  *RateLimitDescription `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Service      string                `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	Descriptors  *RateLimitDescriptors `protobuf:"bytes,4,opt,name=descriptors,proto3" json:"descriptors,omitempty"`
}

func (x *ReportRequest) Reset() {
	*x = ReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest) ProtoMessage() {}

func (x *ReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{1}
}

func (x *ReportRequest) GetRequestToken() string {
	if x != nil {
		return x.RequestToken
	}
	return ""
}

func (x *ReportRequest) GetDescription() *RateLimitDescription {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ReportRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ReportRequest) GetDescriptors() *RateLimitDescriptors {
	if x != nil {
		return x.Descriptors
	}
	return nil
}

type ReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportResponse) Reset() {
	*x = ReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportResponse) ProtoMessage() {}

func (x *ReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportResponse.ProtoReflect.Descriptor instead.
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{2}
}

type RateLimitDescriptors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*RateLimitDescriptors_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *RateLimitDescriptors) Reset() {
	*x = RateLimitDescriptors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimitDescriptors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitDescriptors) ProtoMessage() {}

func (x *RateLimitDescriptors) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitDescriptors.ProtoReflect.Descriptor instead.
func (*RateLimitDescriptors) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{3}
}

func (x *RateLimitDescriptors) GetEntries() []*RateLimitDescriptors_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type DoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestToken string                `protobuf:"bytes,1,opt,name=request_token,json=requestToken,proto3" json:"request_token,omitempty"`
	Service      string                `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Descriptors  *RateLimitDescriptors `protobuf:"bytes,3,opt,name=descriptors,proto3" json:"descriptors,omitempty"`
}

func (x *DoRequest) Reset() {
	*x = DoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoRequest) ProtoMessage() {}

func (x *DoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoRequest.ProtoReflect.Descriptor instead.
func (*DoRequest) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{4}
}

func (x *DoRequest) GetRequestToken() string {
	if x != nil {
		return x.RequestToken
	}
	return ""
}

func (x *DoRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *DoRequest) GetDescriptors() *RateLimitDescriptors {
	if x != nil {
		return x.Descriptors
	}
	return nil
}

type DoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestToken string                `protobuf:"bytes,1,opt,name=request_token,json=requestToken,proto3" json:"request_token,omitempty"`
	Description  *RateLimitDescription `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DoResponse) Reset() {
	*x = DoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoResponse) ProtoMessage() {}

func (x *DoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoResponse.ProtoReflect.Descriptor instead.
func (*DoResponse) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{5}
}

func (x *DoResponse) GetRequestToken() string {
	if x != nil {
		return x.RequestToken
	}
	return ""
}

func (x *DoResponse) GetDescription() *RateLimitDescription {
	if x != nil {
		return x.Description
	}
	return nil
}

type DisabledLimiter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisabledLimiter) Reset() {
	*x = DisabledLimiter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisabledLimiter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisabledLimiter) ProtoMessage() {}

func (x *DisabledLimiter) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisabledLimiter.ProtoReflect.Descriptor instead.
func (*DisabledLimiter) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{6}
}

type SlidingMemoryLimiter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsePercent float64 `protobuf:"fixed64,1,opt,name=use_percent,json=usePercent,proto3" json:"use_percent,omitempty"`
}

func (x *SlidingMemoryLimiter) Reset() {
	*x = SlidingMemoryLimiter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlidingMemoryLimiter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlidingMemoryLimiter) ProtoMessage() {}

func (x *SlidingMemoryLimiter) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlidingMemoryLimiter.ProtoReflect.Descriptor instead.
func (*SlidingMemoryLimiter) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{7}
}

func (x *SlidingMemoryLimiter) GetUsePercent() float64 {
	if x != nil {
		return x.UsePercent
	}
	return 0
}

type FixedMemoryLimiter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate   int64                `protobuf:"varint,1,opt,name=rate,proto3" json:"rate,omitempty"`
	Period *durationpb.Duration `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *FixedMemoryLimiter) Reset() {
	*x = FixedMemoryLimiter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedMemoryLimiter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedMemoryLimiter) ProtoMessage() {}

func (x *FixedMemoryLimiter) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedMemoryLimiter.ProtoReflect.Descriptor instead.
func (*FixedMemoryLimiter) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{8}
}

func (x *FixedMemoryLimiter) GetRate() int64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *FixedMemoryLimiter) GetPeriod() *durationpb.Duration {
	if x != nil {
		return x.Period
	}
	return nil
}

type ExternalLimiter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string            `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Options map[string]string `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExternalLimiter) Reset() {
	*x = ExternalLimiter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalLimiter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalLimiter) ProtoMessage() {}

func (x *ExternalLimiter) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalLimiter.ProtoReflect.Descriptor instead.
func (*ExternalLimiter) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{9}
}

func (x *ExternalLimiter) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ExternalLimiter) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type RateLimiterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*RateLimiterConfig_Disabled
	//	*RateLimiterConfig_SlidingMem
	//	*RateLimiterConfig_FixedMem
	//	*RateLimiterConfig_External
	Type isRateLimiterConfig_Type `protobuf_oneof:"type"`
}

func (x *RateLimiterConfig) Reset() {
	*x = RateLimiterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimiterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimiterConfig) ProtoMessage() {}

func (x *RateLimiterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimiterConfig.ProtoReflect.Descriptor instead.
func (*RateLimiterConfig) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{10}
}

func (m *RateLimiterConfig) GetType() isRateLimiterConfig_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *RateLimiterConfig) GetDisabled() *DisabledLimiter {
	if x, ok := x.GetType().(*RateLimiterConfig_Disabled); ok {
		return x.Disabled
	}
	return nil
}

func (x *RateLimiterConfig) GetSlidingMem() *SlidingMemoryLimiter {
	if x, ok := x.GetType().(*RateLimiterConfig_SlidingMem); ok {
		return x.SlidingMem
	}
	return nil
}

func (x *RateLimiterConfig) GetFixedMem() *FixedMemoryLimiter {
	if x, ok := x.GetType().(*RateLimiterConfig_FixedMem); ok {
		return x.FixedMem
	}
	return nil
}

func (x *RateLimiterConfig) GetExternal() *ExternalLimiter {
	if x, ok := x.GetType().(*RateLimiterConfig_External); ok {
		return x.External
	}
	return nil
}

type isRateLimiterConfig_Type interface {
	isRateLimiterConfig_Type()
}

type RateLimiterConfig_Disabled struct {
	Disabled *DisabledLimiter `protobuf:"bytes,100,opt,name=disabled,proto3,oneof"`
}

type RateLimiterConfig_SlidingMem struct {
	SlidingMem *SlidingMemoryLimiter `protobuf:"bytes,101,opt,name=sliding_mem,json=slidingMem,proto3,oneof"`
}

type RateLimiterConfig_FixedMem struct {
	FixedMem *FixedMemoryLimiter `protobuf:"bytes,102,opt,name=fixed_mem,json=fixedMem,proto3,oneof"`
}

type RateLimiterConfig_External struct {
	External *ExternalLimiter `protobuf:"bytes,103,opt,name=external,proto3,oneof"`
}

func (*RateLimiterConfig_Disabled) isRateLimiterConfig_Type() {}

func (*RateLimiterConfig_SlidingMem) isRateLimiterConfig_Type() {}

func (*RateLimiterConfig_FixedMem) isRateLimiterConfig_Type() {}

func (*RateLimiterConfig_External) isRateLimiterConfig_Type() {}

type RateLimitDescriptors_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RateLimitDescriptors_Entry) Reset() {
	*x = RateLimitDescriptors_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimitDescriptors_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitDescriptors_Entry) ProtoMessage() {}

func (x *RateLimitDescriptors_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_c1_ratelimit_v1_ratelimit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitDescriptors_Entry.ProtoReflect.Descriptor instead.
func (*RateLimitDescriptors_Entry) Descriptor() ([]byte, []int) {
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP(), []int{3, 0}
}

func (x *RateLimitDescriptors_Entry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RateLimitDescriptors_Entry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_c1_ratelimit_v1_ratelimit_proto protoreflect.FileDescriptor

var file_c1_ratelimit_v1_ratelimit_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x31, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e,
	0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x02, 0x0a,
	0x14, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x74, 0x41, 0x74, 0x22, 0x69, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x04, 0x22, 0xe0, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x47,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x47, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaa, 0x01, 0x0a,
	0x14, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x4f, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x41, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x09, 0x44, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x31,
	0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x73, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x22,
	0x7a, 0x0a, 0x0a, 0x44, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x47, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74,
	0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x22, 0x37,
	0x0a, 0x14, 0x53, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x12, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa9, 0x02, 0x0a, 0x11, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x48, 0x0a,
	0x0b, 0x73, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x6d, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x6c, 0x69,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x12, 0x42, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x6d, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x31, 0x2e,
	0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x08, 0x66, 0x69, 0x78, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x12, 0x3e, 0x0a, 0x08, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x32, 0x9e, 0x01, 0x0a, 0x12, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x02, 0x44, 0x6f,
	0x12, 0x1a, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63,
	0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x6f, 0x6e, 0x65, 0x2f,
	0x62, 0x61, 0x74, 0x6f, 0x6e, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x31, 0x2f,
	0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_c1_ratelimit_v1_ratelimit_proto_rawDescOnce sync.Once
	file_c1_ratelimit_v1_ratelimit_proto_rawDescData = file_c1_ratelimit_v1_ratelimit_proto_rawDesc
)

func file_c1_ratelimit_v1_ratelimit_proto_rawDescGZIP() []byte {
	file_c1_ratelimit_v1_ratelimit_proto_rawDescOnce.Do(func() {
		file_c1_ratelimit_v1_ratelimit_proto_rawDescData = protoimpl.X.CompressGZIP(file_c1_ratelimit_v1_ratelimit_proto_rawDescData)
	})
	return file_c1_ratelimit_v1_ratelimit_proto_rawDescData
}

var file_c1_ratelimit_v1_ratelimit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_c1_ratelimit_v1_ratelimit_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_c1_ratelimit_v1_ratelimit_proto_goTypes = []interface{}{
	(RateLimitDescription_Status)(0),   // 0: c1.ratelimit.v1.RateLimitDescription.Status
	(*RateLimitDescription)(nil),       // 1: c1.ratelimit.v1.RateLimitDescription
	(*ReportRequest)(nil),              // 2: c1.ratelimit.v1.ReportRequest
	(*ReportResponse)(nil),             // 3: c1.ratelimit.v1.ReportResponse
	(*RateLimitDescriptors)(nil),       // 4: c1.ratelimit.v1.RateLimitDescriptors
	(*DoRequest)(nil),                  // 5: c1.ratelimit.v1.DoRequest
	(*DoResponse)(nil),                 // 6: c1.ratelimit.v1.DoResponse
	(*DisabledLimiter)(nil),            // 7: c1.ratelimit.v1.DisabledLimiter
	(*SlidingMemoryLimiter)(nil),       // 8: c1.ratelimit.v1.SlidingMemoryLimiter
	(*FixedMemoryLimiter)(nil),         // 9: c1.ratelimit.v1.FixedMemoryLimiter
	(*ExternalLimiter)(nil),            // 10: c1.ratelimit.v1.ExternalLimiter
	(*RateLimiterConfig)(nil),          // 11: c1.ratelimit.v1.RateLimiterConfig
	(*RateLimitDescriptors_Entry)(nil), // 12: c1.ratelimit.v1.RateLimitDescriptors.Entry
	nil,                                // 13: c1.ratelimit.v1.ExternalLimiter.OptionsEntry
	(*timestamppb.Timestamp)(nil),      // 14: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),        // 15: google.protobuf.Duration
}
var file_c1_ratelimit_v1_ratelimit_proto_depIdxs = []int32{
	0,  // 0: c1.ratelimit.v1.RateLimitDescription.status:type_name -> c1.ratelimit.v1.RateLimitDescription.Status
	14, // 1: c1.ratelimit.v1.RateLimitDescription.reset_at:type_name -> google.protobuf.Timestamp
	1,  // 2: c1.ratelimit.v1.ReportRequest.description:type_name -> c1.ratelimit.v1.RateLimitDescription
	4,  // 3: c1.ratelimit.v1.ReportRequest.descriptors:type_name -> c1.ratelimit.v1.RateLimitDescriptors
	12, // 4: c1.ratelimit.v1.RateLimitDescriptors.entries:type_name -> c1.ratelimit.v1.RateLimitDescriptors.Entry
	4,  // 5: c1.ratelimit.v1.DoRequest.descriptors:type_name -> c1.ratelimit.v1.RateLimitDescriptors
	1,  // 6: c1.ratelimit.v1.DoResponse.description:type_name -> c1.ratelimit.v1.RateLimitDescription
	15, // 7: c1.ratelimit.v1.FixedMemoryLimiter.period:type_name -> google.protobuf.Duration
	13, // 8: c1.ratelimit.v1.ExternalLimiter.options:type_name -> c1.ratelimit.v1.ExternalLimiter.OptionsEntry
	7,  // 9: c1.ratelimit.v1.RateLimiterConfig.disabled:type_name -> c1.ratelimit.v1.DisabledLimiter
	8,  // 10: c1.ratelimit.v1.RateLimiterConfig.sliding_mem:type_name -> c1.ratelimit.v1.SlidingMemoryLimiter
	9,  // 11: c1.ratelimit.v1.RateLimiterConfig.fixed_mem:type_name -> c1.ratelimit.v1.FixedMemoryLimiter
	10, // 12: c1.ratelimit.v1.RateLimiterConfig.external:type_name -> c1.ratelimit.v1.ExternalLimiter
	5,  // 13: c1.ratelimit.v1.RateLimiterService.Do:input_type -> c1.ratelimit.v1.DoRequest
	2,  // 14: c1.ratelimit.v1.RateLimiterService.Report:input_type -> c1.ratelimit.v1.ReportRequest
	6,  // 15: c1.ratelimit.v1.RateLimiterService.Do:output_type -> c1.ratelimit.v1.DoResponse
	3,  // 16: c1.ratelimit.v1.RateLimiterService.Report:output_type -> c1.ratelimit.v1.ReportResponse
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_c1_ratelimit_v1_ratelimit_proto_init() }
func file_c1_ratelimit_v1_ratelimit_proto_init() {
	if File_c1_ratelimit_v1_ratelimit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimitDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimitDescriptors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisabledLimiter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlidingMemoryLimiter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixedMemoryLimiter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalLimiter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimiterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c1_ratelimit_v1_ratelimit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimitDescriptors_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_c1_ratelimit_v1_ratelimit_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*RateLimiterConfig_Disabled)(nil),
		(*RateLimiterConfig_SlidingMem)(nil),
		(*RateLimiterConfig_FixedMem)(nil),
		(*RateLimiterConfig_External)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_c1_ratelimit_v1_ratelimit_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_c1_ratelimit_v1_ratelimit_proto_goTypes,
		DependencyIndexes: file_c1_ratelimit_v1_ratelimit_proto_depIdxs,
		EnumInfos:         file_c1_ratelimit_v1_ratelimit_proto_enumTypes,
		MessageInfos:      file_c1_ratelimit_v1_ratelimit_proto_msgTypes,
	}.Build()
	File_c1_ratelimit_v1_ratelimit_proto = out.File
	file_c1_ratelimit_v1_ratelimit_proto_rawDesc = nil
	file_c1_ratelimit_v1_ratelimit_proto_goTypes = nil
	file_c1_ratelimit_v1_ratelimit_proto_depIdxs = nil
}
