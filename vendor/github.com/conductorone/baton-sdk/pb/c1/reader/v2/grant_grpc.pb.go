// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: c1/reader/v2/grant.proto

package v2

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GrantsReaderServiceClient is the client API for GrantsReaderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GrantsReaderServiceClient interface {
	GetGrant(ctx context.Context, in *GrantsReaderServiceGetGrantRequest, opts ...grpc.CallOption) (*GrantsReaderServiceGetGrantResponse, error)
	ListGrantsForEntitlement(ctx context.Context, in *GrantsReaderServiceListGrantsForEntitlementRequest, opts ...grpc.CallOption) (*GrantsReaderServiceListGrantsForEntitlementResponse, error)
	ListGrantsForResourceType(ctx context.Context, in *GrantsReaderServiceListGrantsForResourceTypeRequest, opts ...grpc.CallOption) (*GrantsReaderServiceListGrantsForResourceTypeResponse, error)
}

type grantsReaderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGrantsReaderServiceClient(cc grpc.ClientConnInterface) GrantsReaderServiceClient {
	return &grantsReaderServiceClient{cc}
}

func (c *grantsReaderServiceClient) GetGrant(ctx context.Context, in *GrantsReaderServiceGetGrantRequest, opts ...grpc.CallOption) (*GrantsReaderServiceGetGrantResponse, error) {
	out := new(GrantsReaderServiceGetGrantResponse)
	err := c.cc.Invoke(ctx, "/c1.reader.v2.GrantsReaderService/GetGrant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grantsReaderServiceClient) ListGrantsForEntitlement(ctx context.Context, in *GrantsReaderServiceListGrantsForEntitlementRequest, opts ...grpc.CallOption) (*GrantsReaderServiceListGrantsForEntitlementResponse, error) {
	out := new(GrantsReaderServiceListGrantsForEntitlementResponse)
	err := c.cc.Invoke(ctx, "/c1.reader.v2.GrantsReaderService/ListGrantsForEntitlement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grantsReaderServiceClient) ListGrantsForResourceType(ctx context.Context, in *GrantsReaderServiceListGrantsForResourceTypeRequest, opts ...grpc.CallOption) (*GrantsReaderServiceListGrantsForResourceTypeResponse, error) {
	out := new(GrantsReaderServiceListGrantsForResourceTypeResponse)
	err := c.cc.Invoke(ctx, "/c1.reader.v2.GrantsReaderService/ListGrantsForResourceType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrantsReaderServiceServer is the server API for GrantsReaderService service.
// All implementations should embed UnimplementedGrantsReaderServiceServer
// for forward compatibility
type GrantsReaderServiceServer interface {
	GetGrant(context.Context, *GrantsReaderServiceGetGrantRequest) (*GrantsReaderServiceGetGrantResponse, error)
	ListGrantsForEntitlement(context.Context, *GrantsReaderServiceListGrantsForEntitlementRequest) (*GrantsReaderServiceListGrantsForEntitlementResponse, error)
	ListGrantsForResourceType(context.Context, *GrantsReaderServiceListGrantsForResourceTypeRequest) (*GrantsReaderServiceListGrantsForResourceTypeResponse, error)
}

// UnimplementedGrantsReaderServiceServer should be embedded to have forward compatible implementations.
type UnimplementedGrantsReaderServiceServer struct {
}

func (UnimplementedGrantsReaderServiceServer) GetGrant(context.Context, *GrantsReaderServiceGetGrantRequest) (*GrantsReaderServiceGetGrantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGrant not implemented")
}
func (UnimplementedGrantsReaderServiceServer) ListGrantsForEntitlement(context.Context, *GrantsReaderServiceListGrantsForEntitlementRequest) (*GrantsReaderServiceListGrantsForEntitlementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGrantsForEntitlement not implemented")
}
func (UnimplementedGrantsReaderServiceServer) ListGrantsForResourceType(context.Context, *GrantsReaderServiceListGrantsForResourceTypeRequest) (*GrantsReaderServiceListGrantsForResourceTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGrantsForResourceType not implemented")
}

// UnsafeGrantsReaderServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GrantsReaderServiceServer will
// result in compilation errors.
type UnsafeGrantsReaderServiceServer interface {
	mustEmbedUnimplementedGrantsReaderServiceServer()
}

func RegisterGrantsReaderServiceServer(s grpc.ServiceRegistrar, srv GrantsReaderServiceServer) {
	s.RegisterService(&GrantsReaderService_ServiceDesc, srv)
}

func _GrantsReaderService_GetGrant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantsReaderServiceGetGrantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrantsReaderServiceServer).GetGrant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/c1.reader.v2.GrantsReaderService/GetGrant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrantsReaderServiceServer).GetGrant(ctx, req.(*GrantsReaderServiceGetGrantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrantsReaderService_ListGrantsForEntitlement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantsReaderServiceListGrantsForEntitlementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrantsReaderServiceServer).ListGrantsForEntitlement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/c1.reader.v2.GrantsReaderService/ListGrantsForEntitlement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrantsReaderServiceServer).ListGrantsForEntitlement(ctx, req.(*GrantsReaderServiceListGrantsForEntitlementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrantsReaderService_ListGrantsForResourceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantsReaderServiceListGrantsForResourceTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrantsReaderServiceServer).ListGrantsForResourceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/c1.reader.v2.GrantsReaderService/ListGrantsForResourceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrantsReaderServiceServer).ListGrantsForResourceType(ctx, req.(*GrantsReaderServiceListGrantsForResourceTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GrantsReaderService_ServiceDesc is the grpc.ServiceDesc for GrantsReaderService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GrantsReaderService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "c1.reader.v2.GrantsReaderService",
	HandlerType: (*GrantsReaderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGrant",
			Handler:    _GrantsReaderService_GetGrant_Handler,
		},
		{
			MethodName: "ListGrantsForEntitlement",
			Handler:    _GrantsReaderService_ListGrantsForEntitlement_Handler,
		},
		{
			MethodName: "ListGrantsForResourceType",
			Handler:    _GrantsReaderService_ListGrantsForResourceType_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "c1/reader/v2/grant.proto",
}
